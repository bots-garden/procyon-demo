tasks:
  - name: initialize
    before: |

      # ------------------------------------
      # Instal Wasmer and WAPM CLI
      # ------------------------------------
      sudo apt install libncurses5 libxkbcommon0 libtinfo5 libnss3-tools -y
      curl https://get.wasmer.io -sSfL | sh 
      source /home/gitpod/.wasmer/wasmer.sh
      sudo echo "source /home/gitpod/.wasmer/wasmer.sh" >> $HOME/.bashrc

      # ------------------------------------
      # Install Sat (Suborbital)
      # ------------------------------------
      git clone --depth=1 https://github.com/suborbital/sat.git
      cd sat
      go build -o .bin/sat -tags netgo,wasmtime .
      sudo cp .bin/sat /usr/local/bin/sat
      cd ..
      rm -rf sat

      # ------------------------------------
      # Install the Suborbital CLI
      # ------------------------------------
      brew tap suborbital/subo
      brew install subo

      # ------------------------------------
      # Install tools
      # ------------------------------------
      brew install httpie
      brew install hey
      brew install mkcert


    init: |

      RELEASE="0.1.7"
      ARCHITECTURE="amd64"

      # ------------------------------------
      # Install Procyon
      # ------------------------------------

      wget https://github.com/bots-garden/procyon/releases/download/${RELEASE}/procyon-launcher-${RELEASE}-linux-${ARCHITECTURE}.tar.gz
      mkdir procyon-launcher
      tar -zxf procyon-launcher-${RELEASE}-linux-${ARCHITECTURE}.tar.gz --directory procyon-launcher
      
      cd procyon-launcher

      procyon_json="$(cat <<-EOF
      {
        "executors": {
          "satExecutorPath": "/usr/local/bin/sat"
        },  
        "functions": {
          "wasmFilesDirectory": "./functions"
        },
        "http":{
          "start": 3000
        }
      }
      EOF
      )"
      
      echo "${procyon_json}" > procyon-launcher.json


      # ------------------------------------
      # Install ProcyonCtl
      # ------------------------------------
      # procyonctl_config="$(cat <<-EOF
      # WASM_REGISTRY_URL="https://registry-cdn.wapm.io/contents"
      # PROCYON_URL="http://localhost:9090"
      # PROCYON_REVERSE_URL="http://localhost:8080"
      # EOF
      # )"

      echo 'WASM_REGISTRY_URL="https://localhost:7070/get"' > procyonctl.config
      echo 'PROCYON_URL="http://localhost:9090"' >> procyonctl.config
      echo 'PROCYON_REVERSE_URL="http://localhost:8080"' >> procyonctl.config

      sudo cp ./procyonctl /usr/local/bin/procyonctl
      sudo cp ./procyonctl.config /usr/local/bin/procyonctl.config

      rm ./procyonctl
      rm ./procyonctl.config

      cd ..

      # ------------------------------------
      # Procyon Reverse (reverse proxy)
      # ------------------------------------
      wget https://github.com/bots-garden/procyon/releases/download/${RELEASE}/procyon-reverse-${RELEASE}-linux-${ARCHITECTURE}.tar.gz
      mkdir procyon-reverse
      tar -zxf procyon-reverse-${RELEASE}-linux-${ARCHITECTURE}.tar.gz --directory procyon-reverse

      cd procyon-reverse
      procyon_json="$(cat <<-EOF
      {
        "procyonUrl": "http://localhost:9090",
        "procyonDomain": "http://localhost"
      }
      EOF
      )"
      echo "${procyon_json}" > procyon-reverse.json

      cd ..

      # ------------------------------------
      # Procyon Registry 
      # ------------------------------------
      wget https://github.com/bots-garden/procyon/releases/download/${RELEASE}/procyon-registry.zip
      mkdir procyon-registry
      unzip procyon-registry.zip -d ./procyon-registry/
      cd procyon-registry
      npm install

      echo 'PROCYON_REGISTRY_URL="https://localhost:7070"' > procyon-registry.config

      chmod +x procyon-registryctl

      sudo cp ./procyon-registryctl /usr/local/bin/procyon-registryctl
      sudo cp ./procyon-registryctl.config /usr/local/bin/procyon-registryctl.config

      cd certs
      chmod +x ./generate.sh
      ./generate.sh

      cd ../..

      # ------------------------------------
      # ðŸš€ Ignition
      # ------------------------------------
      echo "ðŸŽ‰ ready to discover Procyon ðŸ˜ƒ"



ports:
    # Alcor reverse proxy 
  - port: 8080
    visibility: public
    # Procyon
  - port: 9090
    visibility: public

vscode:
  extensions:
    - pkief.material-icon-theme
    - golang.go
    - grain-lang.vscode-grain
    - rust-lang.rust
